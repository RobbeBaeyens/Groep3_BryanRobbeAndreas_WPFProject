<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GRP3_Project_WPF.Styles">

    <!-- Header (Robbe Baeyens)-->
    <Style x:Key="Header" TargetType="Grid">
        <Setter Property="Background" Value="Black"/>
    </Style>

    <!-- Headerback (Robbe Baeyens)-->
    <Style x:Key="HeaderBack" TargetType="DockPanel">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 10 0 2"/>
    </Style>

    <!-- Headertext (Robbe Baeyens)-->
    <Style x:Key="HeaderText" TargetType="TextBlock">
        <Setter Property="Padding" Value="0 15 0 0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <!-- Headersubtext (Robbe Baeyens)-->
    <Style x:Key="HeaderSubText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!-- Header blue line (Robbe Baeyens)-->
    <Style x:Key="HeaderSeperator" TargetType="Separator">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="3" />
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="3"/>
        <Setter Property="Margin" Value="0 -5 0 5"/>
    </Style>

    <!-- Hoverless Button (Robbe Baeyens)-->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding ="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Header plus button (Robbe Baeyens)-->
    <Style TargetType="{x:Type Button}" x:Key="AddButtonHeader" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="50" />
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="CornflowerBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Header Back button (Robbe Baeyens)-->
    <Style TargetType="{x:Type Button}" x:Key="BackButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <!-- Event Detail button (Robbe Baeyens)-->
    <Style TargetType="{x:Type Button}" x:Key="EventDetailButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Orange"/>
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Todo complete Button rond (Robbe Baeyens)-->
    <Style TargetType="{x:Type Button}" x:Key="TodoCompleteButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Height" Value="30"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"/>
                <Setter Property="Background" Value="Blue"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Select Button rond (Robbe Baeyens)-->
    <Style TargetType="{x:Type Button}" x:Key="SelectButton" BasedOn="{StaticResource Hoverless}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Blue"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Ronde stijl voor DatePicker (Robbe Baeyens)-->
    <Style TargetType="{x:Type DatePicker}" x:Key="RoundDatePicker">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="0, 0, 0, 15"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBox x:Name="PART_TextBox" Background="LightGray" BorderThickness="0"
                                    Text="{Binding Path=SelectedDate, StringFormat='d MMM yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--Delete Button rond (Bryan Antonis)-->
    <Style TargetType="{x:Type Button}" x:Key="DeleteButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="OrangeRed"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
        </Style.Resources>
    </Style>

    <!--Save Button rond (Bryan Antonis)-->
    <Style TargetType="{x:Type Button}" x:Key="SaveButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="DodgerBlue"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <!--Ronde stijl voor Combobox (Bryan Antonis)-->
    <Style TargetType="{x:Type ComboBox}" x:Key="RoundComboBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
    </Style>

    <!--Ronde stijl voor Textbox (Bryan Antonis)-->
    <Style TargetType="{x:Type TextBox}" x:Key="RoundTextBox">
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="0, 0, 0, 15"/>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
    </Style>
    
    <!--Stijl voor Label's (Bryan Antonis)-->
    <Style TargetType="{x:Type Label}" x:Key="LabelStyle">
        <Setter Property="FontFamily" Value="MS Mincho"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <!--Stijl voor hoverless ToggleButton (Andreas Steenackers)-->
    <Style TargetType="{x:Type ToggleButton}" x:Key="tbHoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding ="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Stijl voor ToggleButton (Andreas Steenackers) --> 
    <Style TargetType="{x:Type ToggleButton}" x:Key="ToDoButtonDone" BasedOn="{StaticResource tbHoverless}" >
        <Setter Property="Width" Value="50"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,10,10,0"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/pictogrammen/nocheck.png"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/pictogrammen/check.png"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="50"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Stijl voor TextBox van To Do (Andreas Steenackers) -->
    <Style TargetType="{x:Type TextBox}" x:Key="ToDoTextBox">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
    </Style>

       <!--Stijl voor label check (Andreas Steenackers)-->
    <Style TargetType="{x:Type Image}" x:Key="Imgchecked">
        <Setter Property="Width" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,10,5"/>
    </Style>

    <!--Stijl voor separator (Andreas STeenackers)-->
    <Style TargetType="{x:Type Separator}" x:Key="ToDoSeparator">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="3" />
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="3"/>
        <Setter Property="Margin" Value="0 -5 0 5"/>
    </Style>
    
    <!--Stijl voor textbox in to do bewerk (Andreas Steenackers)-->
    <Style TargetType="{x:Type TextBox}" x:Key="txtbToDoBewerk">
        <Setter Property="Height" Value="260"/>
        <Setter Property="Margin" Value="10,20,10,0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>
</ResourceDictionary>